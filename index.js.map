{"version":3,"file":"index.js","sources":["../src/index.html?html-proxy&index=1.js"],"sourcesContent":["\n      let exampleText = `# This is MyST Editor\n\nA Markdown editor using the [markdown-it parser](https://github.com/markdown-it/markdown-it), based on the [CommonMark specification](https://spec.commonmark.org/0.31.2/).\nWe added some extensions so that users can make use of various features of the [MyST Markdown flavor](https://mystmd.org/).\n\n## Admonitions\n\nYou can bring more attention to sections of your documents by putting them inside an admonition block. There are many types to choose from.\n\n~~~{note}\nYou can find more information on https://mystmd.org/guide/admonitions.\n~~~\n\n~~~{important}\nNotice that the link in the previous admonition is rendered, even without the standard Markdown link syntax.\n~~~\n\n~~~~{tip}\nAdmonitions can be nested.\n~~~{note}\nLike so.\n~~~\n~~~~\n\n## Dual Pane sync\n\n- In the default dual pane view mode in MyST Editor, you will notice a blue cursor appear both in the editor and in the preview.\n- The editor is aware of the correspondence between the lines and the respective HTML segments, and will highlight them accordingly.\n- The preview pane will also scroll if needed, so that you can always see where you are typing.\n\n~~~{tip}\nTry clicking something in the preview, the cursor in the editor should jump to the end of the corresponding line.\n~~~\n\n## Images\n\nApart from the standard Markdown image syntax:\n\n![](https://picsum.photos/400/300)\n\nYou can also use:\n- The image directive:\n  ~~~{image} https://picsum.photos/400/300\n  :alt: placeholder\n  :width: 200px\n  ~~~\n\n- The figure directive\n  ~~~{figure} https://picsum.photos/400/300\n  :alt: placeholder\n  :width: 200px\n\n  An example figure.\n  ~~~\n\n## Mermaid diagrams\n\nWe have integrated the [Mermaid](https://mermaid.js.org/) diagramming tool with our editor, enabling you to add various diagrams and flowcharts to your documents.\nAn overview of the Mermaid syntax is available [here](https://mermaid.js.org/intro/).\n\n### Graphs\n\n~~~mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n~~~\n\n### Sequence diagrams\n\n~~~mermaid\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->>John: Hello John, how are you?\n    loop HealthCheck\n        John->>John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail!\n    John-->>Alice: Great!\n    John->>Bob: How about you?\n    Bob-->>John: Jolly good!\n~~~\n\n### Git graphs\n\n~~~mermaid\ngitGraph\n   commit\n   commit\n   branch develop\n   commit\n   commit\n   commit\n   checkout main\n   commit\n   commit\n~~~\n\n## Copy document, print to PDF, templates\n\nIn the top left you will find some useful buttons that can be customized when integrating the editor with a website.\nSome of the buttons include:\n- \\`Copy document as HTML\\`\n- \\`Print document as PDF\\`\n- \\`Templates\\` - allows you to apply various document templates, depends on the configuration of the  MyST Editor\n\n## View modes\n\nIn the top right corner you will find various view modes, including the source mode, preview mode, dual pane mode and the text diff mode, allowing you to see what changes were made.\n\n## Custom transforms\n\nThe editor allows you to easily extend the standard Markdown syntax without having to write your own \\`markdown-it\\` plugins using the custom transforms feature.\nYou can specify a regular expression and what the output should look like, e.g.:\n\n~~~js\n{\n  // Same repo issue links\n  target: /(^|(?<=s))#d+/g,\n  transform: (match) => {\n    const issueId = match.slice(1);\n    return \\`<a href=\"https://github.com/antmicro/myst-editor/issues/\\${issueId}\">\\${match}</a>\\`;\n  },\n}\n~~~\n\n~~~{tip}\nThe \\`transform\\` function can also be async. These async transforms will be cached, so that the editor doesn't make too many calls.\n~~~\n\nExamples of transforms included in the demo:\n\nIssue in this repo: #1\nPR in this repo: !2\nIssue in another repo: github/docs#30828\nPR in another repo: github/docs!100\nPerson/org handle: @antmicro\n\n## Collaboration\n\nCollaborative features are not available in this demo, you will need to run the collaborative server to use them.\nThese features include:\n- real-time editing with other people\n- seeing remote cursors\n- comments - add some text that does not show up in the preview\n  - resolved comments - a new view to see comments that were resolved\n  - suggestions - non-destructively suggest changes to the document`;\n      console.log(\"Welcome to the MyST editor demo. The right hand side should auto update.\");\n\n      import MystEditor, { defaultButtons, darkTheme } from \"./MystEditor.jsx\";\n\n      const usercolors = [\"#30bced\", \"#60c771\", \"#e6aa3a\", \"#cbb63e\", \"#ee6352\", \"#9ac2c9\", \"#8acb88\", \"#14b2c4\"];\n\n      const urlParams = new URLSearchParams(window.location.search);\n      const room = urlParams.get(\"room\") || \"0\";\n      const username = urlParams.get(\"username\") || Math.floor(Math.random() * 1000).toString();\n      const color = usercolors[Math.floor(Math.random() * usercolors.length)];\n      let exampleCustomRoles = [\n        {\n          target: \"say\",\n          transform: async (content) => username + \" says: '\" + content + \"'\",\n        },\n      ];\n\n      let exampleCustomDirectives = [\n        {\n          target: \"bold\",\n          transform: (_, data) => `<b style=\"white-space: pre-wrap;\">${data.body}</b>`,\n        },\n      ];\n\n      let exampleTransforms = [\n        {\n          // Other repo issue links\n          target: /[0-9a-z\\-]+\\/[0-9a-z\\-]+#\\d{1,10}/g,\n          transform: (match) => {\n            const [repo, issueId] = match.split(\"#\");\n            return `<a href=\"https://github.com/${repo}/issues/${issueId}\">${match}</a>`;\n          },\n        },\n        {\n          // Other repo PR links\n          target: /[0-9a-z\\-]+\\/[0-9a-z\\-]+\\!\\d+/g,\n          transform: (match) => {\n            const [repo, prid] = match.split(\"!\");\n            return `<a href=\"https://github.com/${repo}/pull/${prid}\">${match}</a>`;\n          },\n        },\n        {\n          // Same repo issue links\n          target: /(^|(?<=\\s))#\\d+/g,\n          transform: (match) => {\n            const issueId = match.slice(1);\n            return `<a href=\"https://github.com/antmicro/myst-editor/issues/${issueId}\">${match}</a>`;\n          },\n        },\n        {\n          // Same repo PR links\n          target: /(^|(?<=\\s))!\\d+/g,\n          transform: (match) => {\n            const prid = match.slice(1);\n            return `<a href=\"https://github.com/antmicro/myst-editor/pull/${prid}\">${match}</a>`;\n          },\n        },\n        {\n          // User links\n          target: /@[0-9a-z\\-]+/g,\n          transform: (match) => {\n            const user = match.slice(1);\n            return `\n          <a href='https://github.com/${user}'>\n            ${user}\n          </a>`;\n          },\n        },\n        {\n          target: /\\|date\\|/g,\n          transform: (match) => new Promise((r) => r(new Date().toLocaleString(\"en-GB\", { timeZone: \"UTC\" }))),\n        },\n      ];\n\n      const collabEnabled = !(import.meta.env.VITE_COLLAB == \"OFF\") && urlParams.get(\"collab\") != \"false\";\n      const collabUrl = import.meta.env.VITE_WS_URL ?? urlParams.get(\"collab_server\");\n\n      MystEditor(\n        {\n          id: \"demo\",\n          templatelist: \"linkedtemplatelist.json\",\n          initialText: exampleText,\n          title: \"[MyST Editor](https://github.com/antmicro/myst-editor/) demo\",\n          transforms: exampleTransforms,\n          collaboration: {\n            enabled: collabEnabled,\n            commentsEnabled: collabEnabled,\n            resolvingCommentsEnabled: collabEnabled,\n            wsUrl: collabUrl ?? \"#\",\n            username,\n            room,\n            color,\n            mode: collabUrl ? \"websocket\" : \"local\",\n          },\n          customRoles: exampleCustomRoles,\n          customDirectives: exampleCustomDirectives,\n          includeButtons: defaultButtons.concat([\n            {\n              text: \"Custom button\",\n              action: () => alert(\"Custom button action\"),\n            },\n          ]),\n          spellcheckOpts: { dict: \"en_US\", dictionaryPath: `${window.location.pathname}dictionaries` },\n          syncScroll: true,\n          additionalStyles: darkTheme,\n          cmDarkTheme: true,\n          mermaidTheme: \"dark\",\n        },\n        document.getElementById(\"myst\"),\n      );\n    "],"names":["exampleText","console","log","usercolors","urlParams","URLSearchParams","window","location","search","room","get","username","Math","floor","random","toString","color","length","exampleCustomRoles","target","transform","content","exampleCustomDirectives","_","data","body","exampleTransforms","match","repo","issueId","split","prid","slice","user","Promise","r","Date","toLocaleString","timeZone","collabEnabled","import","VITE_COLLAB","collabUrl","VITE_WS_URL","MystEditor","id","templatelist","initialText","title","transforms","collaboration","enabled","commentsEnabled","resolvingCommentsEnabled","wsUrl","mode","customRoles","customDirectives","includeButtons","defaultButtons","concat","text","action","alert","spellcheckOpts","dict","dictionaryPath","pathname","syncScroll","additionalStyles","darkTheme","cmDarkTheme","mermaidTheme","document","getElementById"],"mappings":"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"}